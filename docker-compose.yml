version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: ar_automation_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-ar_automation}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ar_automation_network

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ar_automation_backend
    restart: unless-stopped
    environment:
      # Database configuration
      DATABASE_URL: ${DATABASE_URL:-postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-ar_automation}}

      # API Keys
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      LANGCHAIN_API_KEY: ${LANGCHAIN_API_KEY:-}
      LANGCHAIN_TRACING_V2: ${LANGCHAIN_TRACING_V2:-false}
      LANGCHAIN_PROJECT: ${LANGCHAIN_PROJECT:-ar-automation}

      # Email Service (Resend)
      RESEND_API_KEY: ${RESEND_API_KEY}
      INTERNAL_NOTIFICATION_EMAIL: ${INTERNAL_NOTIFICATION_EMAIL:-team@arautomation.com}

      # Application settings
      ENVIRONMENT: ${ENVIRONMENT:-development}
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    volumes:
      # Mount code for live reload
      - ./backend/app:/code/app
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import requests; requests.get(\"http://localhost:8000/health\")'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - ar_automation_network

  # React Frontend (Vite Dev Server)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ar_automation_frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    volumes:
      # Mount code for live reload
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/index.html:/app/index.html
      - ./frontend/vite.config.ts:/app/vite.config.ts
      - ./frontend/tailwind.config.ts:/app/tailwind.config.ts
      - ./frontend/postcss.config.js:/app/postcss.config.js
      # Don't mount node_modules (use container's version)
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - ar_automation_network

volumes:
  postgres_data:
    driver: local

networks:
  ar_automation_network:
    driver: bridge
