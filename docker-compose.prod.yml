version: '3.8'

services:
  # PostgreSQL Database (internal only)
  db:
    image: postgres:15-alpine
    container_name: ar_automation_db_prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-ar_automation}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # No external port exposure - internal network only
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ar_automation_network

  # FastAPI Backend (Production)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: ar_automation_backend_prod
    restart: unless-stopped
    environment:
      # Database configuration
      DATABASE_URL: ${DATABASE_URL:-postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB:-ar_automation}}

      # API Keys
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      LANGCHAIN_API_KEY: ${LANGCHAIN_API_KEY:-}
      LANGCHAIN_TRACING_V2: ${LANGCHAIN_TRACING_V2:-false}
      LANGCHAIN_PROJECT: ${LANGCHAIN_PROJECT:-ar-automation}

      # Application settings
      ENVIRONMENT: production
      NODE_ENV: production
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - ar_automation_network

  # React Frontend (Production with Nginx)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: ar_automation_frontend_prod
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-80}:80"
    environment:
      # API URL for frontend to connect to backend
      VITE_API_URL: ${VITE_API_URL:-http://localhost:8000}
    depends_on:
      - backend
    networks:
      - ar_automation_network

volumes:
  postgres_data:
    driver: local

networks:
  ar_automation_network:
    driver: bridge
